# Program using MAFIA API as of documentation:
# 
# declare sketch pcsa_sketch<1>[16][32]
# declare hash_set pcsa_hash_set (H=1, pcsa_hash): {ipv4.src, ipv4.dst, ipv4.protocol, tcp.src, tcp.dst} 
#                                                   -> {bitmap<6>, index<8>}
# 
# Sketch( lambda(pcsa_hash_set): { pcsa_sketch[bitmap][index] = 1 }, pcsa_sketch) 
# 

from mafia_lang.primitives import *

# Declare a matrix for 16x32 1-bit cells to hold the sketch
pcsa_sketch = Sketch('pcsa_sketch', 16, 32, 1)

# Declares a family of 4 hash functions of type 'pcsa_hash' (second parameter) 
# 'pcsa_hash' is a pre-existing hash function.
# (i.e, known *BY THE COMPILER*, which provides a black-box implementation).
# 3rd parameter is an array of header fields used as input to the hash.
# 4th parameter is an array of output variable generated by each of 4 hash functions.
pcsa_hash_set = HashFunction( \
                                'pcsa_hash_set', \
                                'pcsa_hash', \
                                1, \
                                [ "ipv4.src", "ipv4.dst", "tcp.src", "tcp.dst", "ipv4.protocol"], \
                                [ HashOutputVar('bitmap', 4), HashOutputVar('index', 5) ] \
                            )

s = Sketch_op('pcsa_sketch', 'lambda(pcsa_hash_set): { pcsa_sketch[bitmap][index] = 1 }', pcsa_sketch)

measurement = s
