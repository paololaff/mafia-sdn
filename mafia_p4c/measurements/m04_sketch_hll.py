# Program using MAFIA API as of documentation:
# 
# declare sketch hll_sketch<32>[1][64]
# declare hash_set hll_hash_set (H=4, hll_hash): {ipv4.src, ipv4.dst, ipv4.protocol, tcp.src, tcp.dst} 
#                                                          -> {index<6>, value<8>}
# 
# Sketch( lambda(hll_hash_set): { hll_sketch[1][index] = value }, hll_sketch) 
# 

from mafia_lang.primitives import *

# Declare a matrix for 1x64 32-bit cells to hold the sketch
hll_sketch = Sketch('hll_sketch', 1, 64, 32)

# Declares a family of 4 hash functions of type 'hll_hash' (second parameter) 
# 'hll_hash' is a pre-existing hash function.
# (i.e, known *BY THE COMPILER*, which provides a black-box implementation).
# 3rd parameter is an array of header fields used as input to the hash.
# 4th parameter is an array of output variable generated by each of 4 hash functions.
hll_hash_set = HashFunction( \
                                'hll_hash_set', \
                                'hll_hash', \
                                1, \
                                [ "ipv4.src", "ipv4.dst", "tcp.src", "tcp.dst", "ipv4.protocol"], \
                                [ HashOutputVar('index', 6), HashOutputVar('value', 5) ] \
                            )

s = Sketch_op('hll_sketch', 'lambda(hll_hash_set): { hll_sketch[0][index] = value }', hll_sketch)

measurement = s
